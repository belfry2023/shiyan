Microsoft (R) Macro Assembler Version 6.15.8803		    05/20/25 00:20:53
es0702.asm						     Page 1 - 1


				include io16.inc
			      C .nolist    ; Do not list following content
			      C .list
			      C 
 0000				.data
 0000 41 20 38 32 35 39		    intmsg byte 'A 8259A Interrupt! Count: 000',0dh,0ah,0
       41 20 49 6E 74 65
       72 72 75 70 74 21
       20 43 6F 75 6E 74
       3A 20 30 30 30 0D
       0A 00
 0020 00			    counter byte 0
 0000				.code
 0000				start:
 0000  B8 3508			    mov ax, 3508h
 0003  CD 21			    int 21h
 0005  06			    push es
 0006  53			    push bx
 0007  FA			    cli
 0008  1E			    push ds
 0009  B8 ---- R		    mov ax, seg new08h
 000C  8E D8			    mov ds, ax
 000E  BA 003C R		    mov dx, offset new08h
 0011  B8 2508			    mov ax, 2508h
 0014  CD 21			    int 21h
 0016  1F			    pop ds
 0017  E4 21			    in al, 21h
 0019  50			    push ax
 001A  24 FE			    and al, 0feh
 001C  E6 21			    out 21h, al
 001E  C6 06 0020 R 00		    mov counter, 0
 0023  FB			    sti
 0024				start1:
 0024  80 3E 0020 R 0A		    cmp counter, 10
 0029  72 F9			    jb start1
				    ; 恢复中断向量部分
 002B  FA			    cli
 002C  58			    pop ax
 002D  E6 21			    out 21h, al      ; 恢复原IMR
 002F  5A			    pop dx           ; 弹出原中断处理程序的偏移量（BX）
 0030  1F			    pop ds           ; 弹出原中断处理程序的段地址（ES）
 0031  B8 2508			    mov ax, 2508h
 0034  CD 21			    int 21h          ; 恢复原08h中断向量
 0036  FB			    sti
 0037  B8 4C00			    mov ax, 4c00h
 003A  CD 21			    int 21h          ; 正常退出程序

 003C				new08h proc
 003C  FB			    sti
 003D  50			    push ax
 003E  56			    push si
 003F  1E			    push ds
 0040  53			    push bx
 0041  B8 ---- R		    mov ax, @data
 0044  8E D8			    mov ds, ax
 0046  FE 06 0020 R		    inc counter

				    ; Check if counter is even
 004A  A0 0020 R		    mov al, counter
 004D  A8 01			    test al, 1
 004F  75 28			    jnz skip_display

				    ; Convert counter to ASCII string
 0051  A0 0020 R		    mov al, counter
 0054  B4 00			    mov ah, 0
 0056  B3 64			    mov bl, 100
 0058  F6 F3			    div bl
 005A  04 30			    add al, '0'
 005C  A2 001A R		    mov [intmsg+26], al  ; Hundreds place

 005F  8A C4			    mov al, ah
 0061  B4 00			    mov ah, 0
 0063  B3 0A			    mov bl, 10
 0065  F6 F3			    div bl
 0067  04 30			    add al, '0'
 0069  A2 001B R		    mov [intmsg+27], al  ; Tens place
 006C  80 C4 30			    add ah, '0'
 006F  88 26 001C R		    mov [intmsg+28], ah  ; Ones place

 0073  BE 0000 R		    mov si, offset intmsg
 0076  E8 0009			    call dpstri

 0079				skip_display:
				    ; Send EOI to PIC
 0079  B0 20			    mov al, 20h
 007B  E6 20			    out 20h, al

 007D  5B			    pop bx
 007E  1F			    pop ds
 007F  5E			    pop si
 0080  58			    pop ax
 0081  CF			    iret
 0082				new08h endp

 0082				dpstri proc
 0082  50			    push ax
 0083  53			    push bx
 0084				dps1:
 0084  8A 04			    mov al, [si]
 0086  3C 00			    cmp al, 0
 0088  74 0A			    jz dps2
 008A  BB 0000			    mov bx, 0
 008D  B4 0E			    mov ah, 0eh
 008F  CD 10			    int 10h
 0091  46			    inc si
 0092  EB F0			    jmp dps1
 0094				dps2:
 0094  5B			    pop bx
 0095  58			    pop ax
 0096  C3			    ret
 0097				dpstri endp
				end start
Microsoft (R) Macro Assembler Version 6.15.8803		    05/20/25 00:20:53
es0702.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

exit . . . . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

DGROUP . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	16 Bit	 0021	  Word	  Public  'DATA'	
STACK  . . . . . . . . . . . . .	16 Bit	 0400	  Para	  Stack	  'STACK'	 
_TEXT  . . . . . . . . . . . . .	16 Bit	 0097	  Word	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

dpstri . . . . . . . . . . . . .	P Near	 0082	  _TEXT	Length= 0015 Public
  dps1 . . . . . . . . . . . . .	L Near	 0084	  _TEXT	
  dps2 . . . . . . . . . . . . .	L Near	 0094	  _TEXT	
new08h . . . . . . . . . . . . .	P Near	 003C	  _TEXT	Length= 0046 Public
  skip_display . . . . . . . . .	L Near	 0079	  _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 0000h	 
@DataSize  . . . . . . . . . . .	Number	 0000h	 
@Interface . . . . . . . . . . .	Number	 0000h	 
@Model . . . . . . . . . . . . .	Number	 0002h	 
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 DGROUP
@fardata?  . . . . . . . . . . .	Text   	 FAR_BSS
@fardata . . . . . . . . . . . .	Text   	 FAR_DATA
@stack . . . . . . . . . . . . .	Text   	 DGROUP
counter  . . . . . . . . . . . .	Byte	 0020	  _DATA	
dispbb . . . . . . . . . . . . .	L Near	 0000	  External
dispbd . . . . . . . . . . . . .	L Near	 0000	  External
dispbw . . . . . . . . . . . . .	L Near	 0000	  External
dispcrlf . . . . . . . . . . . .	L Near	 0000	  External
dispc  . . . . . . . . . . . . .	L Near	 0000	  External
disphb . . . . . . . . . . . . .	L Near	 0000	  External
disphd . . . . . . . . . . . . .	L Near	 0000	  External
disphw . . . . . . . . . . . . .	L Near	 0000	  External
dispmsg  . . . . . . . . . . . .	L Near	 0000	  External
disprb . . . . . . . . . . . . .	L Near	 0000	  External
disprd . . . . . . . . . . . . .	L Near	 0000	  External
disprf . . . . . . . . . . . . .	L Near	 0000	  External
disprw . . . . . . . . . . . . .	L Near	 0000	  External
dispsib  . . . . . . . . . . . .	L Near	 0000	  External
dispsid  . . . . . . . . . . . .	L Near	 0000	  External
dispsiw  . . . . . . . . . . . .	L Near	 0000	  External
dispuib  . . . . . . . . . . . .	L Near	 0000	  External
dispuid  . . . . . . . . . . . .	L Near	 0000	  External
dispuiw  . . . . . . . . . . . .	L Near	 0000	  External
intmsg . . . . . . . . . . . . .	Byte	 0000	  _DATA	
readbb . . . . . . . . . . . . .	L Near	 0000	  External
readbd . . . . . . . . . . . . .	L Near	 0000	  External
readbw . . . . . . . . . . . . .	L Near	 0000	  External
readc  . . . . . . . . . . . . .	L Near	 0000	  External
readhb . . . . . . . . . . . . .	L Near	 0000	  External
readhd . . . . . . . . . . . . .	L Near	 0000	  External
readhw . . . . . . . . . . . . .	L Near	 0000	  External
readmsg  . . . . . . . . . . . .	L Near	 0000	  External
readsib  . . . . . . . . . . . .	L Near	 0000	  External
readsid  . . . . . . . . . . . .	L Near	 0000	  External
readsiw  . . . . . . . . . . . .	L Near	 0000	  External
readuib  . . . . . . . . . . . .	L Near	 0000	  External
readuid  . . . . . . . . . . . .	L Near	 0000	  External
readuiw  . . . . . . . . . . . .	L Near	 0000	  External
start1 . . . . . . . . . . . . .	L Near	 0024	  _TEXT	
start  . . . . . . . . . . . . .	L Near	 0000	  _TEXT	

	   0 Warnings
	   0 Errors
